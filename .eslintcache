[{"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\index.js":"1","C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\reportWebVitals.js":"2","C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\App.js":"3","C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\pages\\Home.jsx":"4","C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\pages\\Login.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1535,"mtime":1607329271440,"results":"9","hashOfConfig":"7"},{"size":15053,"mtime":1607330879686,"results":"10","hashOfConfig":"7"},{"size":2057,"mtime":1607329518683,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"pjcjw3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\index.js",[],["27","28"],"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\reportWebVitals.js",[],["29","30"],"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\App.js",["31","32"],"import logo from './logo.svg';\nimport '../src/tailwind.output.css';\nimport '../src/styles/style.scss'\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createContext, useReducer } from 'react';\n\nexport const AuthContext = createContext()\n\nconst initialState = {\n  isAuthenticated: (localStorage.getItem('token') ? true : false),\n  username: null,\n  token: null\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n        localStorage.setItem('username', JSON.stringify(action.payload.user))\n        localStorage.setItem('token', JSON.stringify(action.payload.token))\n        return {\n          ...state,\n          isAuthenticated: true,\n          username: action.payload.user,\n          token: action.payload.token\n        }\n    case 'LOGOUT':\n        localStorage.clear()\n        return {\n          isAuthenticated: false,\n          username: null\n        }\n    default:\n      return state\n  }\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  console.log(state)\n  return (\n    <div className=\"bg-lightsecondary\">\n      <Router>\n        <Switch>\n          <AuthContext.Provider value={{\n            state,\n            dispatch\n          }}>\n              <Route exact path=\"/\" exact component={Login} />\n              <Route path=\"/home\" component={Home} />\n          </AuthContext.Provider>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["33","34"],"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\pages\\Home.jsx",["35","36","37","38","39"],"C:\\Users\\Rezki\\Desktop\\ReactJs\\says\\src\\pages\\Login.jsx",["40","41","42"],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport qs from 'querystring'\r\n\r\nimport '../../src/App.css';\r\nimport { AuthContext } from '../App';\r\n\r\nconst END_POINT = 'http://127.0.0.1:5000/';\r\n\r\nfunction Login(props) {\r\n\r\n  const {dispatch} = useContext(AuthContext)\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSubmit, setIsSubmit] = useState(false)\r\n\r\n  const [message, setMessage] = useState({\r\n    message: '',\r\n    display: 'block'\r\n  })\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    setIsSubmit(true)\r\n    setMessage({\r\n      message: ''\r\n    })\r\n\r\n    const configHeaders = {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    }\r\n\r\n    const reqBody = {\r\n      email: email,\r\n      password: password\r\n    }\r\n\r\n    axios.post(END_POINT + 'login', qs.stringify(reqBody), configHeaders).then(res => {\r\n      if(res.data.success === true) {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data\r\n        })\r\n        console.log('berhasil login')\r\n        props.history.push('/home')\r\n\r\n      } else {\r\n        setIsSubmit(false)\r\n        setMessage({\r\n          message: res.data.message\r\n        })\r\n      }\r\n\r\n      throw res\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"joinOuterContainer\">\r\n      <div className=\"joinInnerContainer\">\r\n        <h1 className=\"heading\">Join</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <input placeholder=\"Email\" className=\"joinInput\" type=\"text\" onChange={(event) => setEmail(event.target.value)} />\r\n            <input placeholder=\"Password\" className=\"joinInput\" type=\"password\" onChange={(event) => setPassword(event.target.value)} />\r\n          </div>\r\n          <button className={'button mt-20'} type=\"submit\">Sign In</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":51,"column":37,"nodeType":"55","endLine":51,"endColumn":42},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","replacedBy":"57"},{"ruleId":"49","severity":1,"message":"58","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":19},{"ruleId":"49","severity":1,"message":"59","line":26,"column":12,"nodeType":"51","messageId":"52","endLine":26,"endColumn":20},{"ruleId":"49","severity":1,"message":"60","line":26,"column":22,"nodeType":"51","messageId":"52","endLine":26,"endColumn":33},{"ruleId":"49","severity":1,"message":"61","line":44,"column":20,"nodeType":"51","messageId":"52","endLine":44,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":143,"column":7,"nodeType":"64","endLine":143,"endColumn":62,"suggestions":"65"},{"ruleId":"49","severity":1,"message":"66","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"67","line":16,"column":10,"nodeType":"51","messageId":"52","endLine":16,"endColumn":18},{"ruleId":"49","severity":1,"message":"68","line":18,"column":10,"nodeType":"51","messageId":"52","endLine":18,"endColumn":17},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["69"],["70"],"'queryString' is defined but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'setTyping' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFriend'. Either include it or remove the dependency array. Outer scope values like 'END_POINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["71"],"'Link' is defined but never used.","'isSubmit' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [location.search, alreadyFriend, chat, state, getFriend]",{"range":"74","text":"75"},[3959,4014],"[location.search, alreadyFriend, chat, state, getFriend]"]